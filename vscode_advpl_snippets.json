{
	/*
		// Place your snippets for Advpl(PRW) here. Each snippet is defined under a snippet name and has a prefix, body and
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
		// same ids are connected.
		// Example:
		"Print to console": {
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/

		"_SetOwnerPrvt": {
			"prefix": "_SetNamedPrvt",
			"body": [
				"_SetNamedPrvt('${1:cVar}',${2:xValue}"
			],
			"description": "Cria uma variável private na função superior da pilha"
		},

		"_SetNamedPrvt": {
			"prefix": "_SetNamedPrvt",
			"body": [
				"_SetNamedPrvt('${1:cVar}',${2:xValue},'${3:cFuncOwner}')"
			],
			"description": "Cria uma variável private em uma das funções superiores na pilha, nomeada no 3 parâmetro"
		},

		"Posicione": {
			"prefix": "Posicione Completo",
			"body": [
				"Posicione('${1:cAlias}',${2:nIndice},xFilial('$1')+${3:cChave},'${4:cCpoRet}','${5:cNickName}')"
			],
			"description": "While Statement"
		},

		"Posicione_Simples": {
			"prefix": "Posicione Sem o parâmetro Nickname",
			"body": [
				"Posicione('${1:cAlias}',${2:nIndice},xFilial('$1')+${3:cChave},'${4:cCpoRet}')"
			],
			"description": "While Statement"
		},

		"While": {
			"prefix": "While",
			"body": [
			"While ${lCond}",
			"	\ $TM_SELECTED_TEXT",
			"	\ $0",
			"EndDo"
			],
			"description": "While Statement complete"
		},

		"While (Alias)": {
			"prefix": "While",
			"body": [
			"While ${Alias}->(!Eof()) .And. ${lCond}",
			"	\ $TM_SELECTED_TEXT",
			"	\ $0",
			"	\ ${Alias}->(DbSkip())",
			"EndDo"
			],
			"description": "While Statement in Alias"
		},

		"@tgm": {
			"prefix": "@tgm",
			"body": [
				"// $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR : Thiago Mota <mota.thiago@totvs.com.br>",
				"// ${2:Cliente} - ${3:Comentário}"
			],
			"description": "Comentário"
		},

		"@tgmCab": {
			"prefix": "@tgmCab",
			"body": [
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:Classe ou nada:}${2:Função ou Método}",
				"  ==============================================================================",
				"	\ @description",
				"	\ ${3:Descrição da função}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"$0$TM_SELECTED_TEXT",
				"// FIM ${4:da Função} ${2}",
				"//==============================================================================",
			],
			"description": "Meu Cabeçalho no padrão Protheus Doc - Com início e fim"
		},
		"@teste": {
			"prefix": "@teste",
			"body": ["t:= '${1|one,two,three|}'","${file}"],
			"description": "teste"
		},
		"GetArea": {
			"prefix": "GetArea",
			"body": [
				"Local aAreaBkp:= {}",
				"",
				"// Backup das áreas atuais",
				"aEval({${1:Array of Alias}}, { |area| aAdd(aAreaBkp, (area)->(GetArea()) ) } )",
				"aAdd(aAreaBkp, GetArea())",
				"",
				"$TM_SELECTED_TEXT",
				"",
				"$0",
				"aEval(aAreaBkp, {|area| RestArea(area)}) // Restaura as áreas anteriores"
			],
			"description": "Backup e Restore das áreas atuais"
		},

		"MsNewProcess": {
			"prefix": "MsNewProcess",
			"body": [
				"Local cTitle:= ${1:Título da Janela}",
				"Local cMsgIni:= ${2:Mensagem inicial}",
				"Local bAction:= {|lEnd,oProc| oProc:oMeter1:setFastMode(.T.), oProc:oMeter2:setFastMode(.T.), ${3:Função de processamento } }",
				"Local oProcess:= MsNewProcess():New(bAction, cTitle, cMsgIni)",
				"",
				"oProcess:Activate()",
				"$0"
			],
			"description": "MsNewProcess com FastMode habilitado"
		},

		"MsNewProcess:SetRegua": {
			"prefix": "MsNewProcess:SetRegua",
			"body": [
				"${1:oProcess}:SetRegua${2:1 ou 2}(${3:nTamRegua})",
				"$0"
			],
			"description": "Define o tamanho da régua (1 ou 2) para MsNewProcess com FastMode habilitado"
		},

		"MsNewProcess:IncRegua": {
			"prefix": "MsNewProcess:IncRegua",
			"body": [
				"${1:oProcess}:IncRegua${2:1 ou 2}(${3:Mensagem de progresso})",
				"$0"
			],
			"description": "Progride a barra e Define a mensagem de acompanhamento."
		},

		"Static_Function_Simplificada": {
			"prefix": "Static Function",
			"body": [
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:FunctionName}",
				"  ==============================================================================",
				"	\ @description",
				"	\ ${2:Descrição da função}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"Static Function ${1}( ${4:Parâmetros} )",
				"	\ $0",
				"",
				"Return ( ${5:Nil} )",
				"// FIM da Funcao ${1}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "Static Function Simplificada"
		},

		"User_Function_Simplificada": {
			"prefix": "User Function",
			"body": [
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:$TM_FILENAME_BASE}",
				"  ==============================================================================",
				"	\ @description",
				"	\ ${2:Descrição da função}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"User Function ${1}( ${4:Parâmetros} )",
				"	\ $0",
				"",
				"Return ( ${5:Nil} )",
				"// FIM da Funcao ${1}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "User Function Simplificada"
		},
		"User_Function_Completa": {
			"prefix": "User Function",
			"body": [
				"#INCLUDE 'PROTHEUS.CH'",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:$TM_FILENAME_BASE}",
				"  ==============================================================================",
				"	\ @description",
				"	\ ${2:Descrição da função}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"User Function ${1}( ${4:Parâmetros} )",
				"	\ $0",
				"",
				"Return ( ${5:Nil} )",
				"// FIM da Funcao ${1}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "User Function Completa"
		},

		"Ponto_de_Entrada": {
			"prefix": "Ponto de Entrada",
			"body": [
				"#INCLUDE 'PROTHEUS.CH'",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:$TM_FILENAME_BASE }",
				"  ==============================================================================",
				"	\ @description",
				"	\ Ponto de Entrada ${1} - ${2:Descrição da função}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"	\ @param var, tipo, descrição ${10:Parâmetros}",
				"",
				"	\ @return tipo, descrição",
				"",
				"	\ @obs ",
				"	\  Localização: ${4:Localiza}",
				"	\  Uso: ${5:Uso}",
				"	\  Referência: ${6:Uso}",
				"",
				"	\  Customização: ${7:Cliente} - ${8:Funcionalidade}",
				"",
				"/*/",
				"//============================================================================\\",
				"User Function ${1}()",
				"",
				"	\ Local ${9:xRet}:= Nil",
				"	\ $0",
				"",
				"Return ( ${9} )",
				"// FIM do Ponto de Entrada ${1}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "User Function Completa"
		},
		"Nova_Classe_Advpl": {
			"prefix": "Class",
			"body": [
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:$TM_FILENAME_BASE}",
				"==============================================================================",
				"	\ @description",
				"	\ Definição da classe ${1}",
				"	\ ${2:Descrição da Classe}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"CLASS ${1} ${3:FROM ClassePai}",
				"",
				"	\ ${4:DATA propriedade1}",
				"	\ METHOD New() CONSTRUCTOR",
				"",
				"ENDCLASS",
				"// FIM da Definição da classe ${1}",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}:New",
				"==============================================================================",
				"	\ @description",
				"	\ Método construtor da classe ${1}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD New() CLASS ${1}",
				"	\ $0",
				"Return (Self)",
				"// FIM do método New",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "Classe ADVPL Simples"
		},
		"Novo_Metodo_ADVPL": {
			"prefix": "Method",
			"body": [
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:$TM_FILENAME_BASE}:${2:NomeMetodo}",
				"  ==============================================================================",
				"	\ @description",
				"	\ ${1:Descricao do Metodo}",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"/*/",
				"//============================================================================\\",
				"METHOD ${2}() CLASS ${1}",
				"	\ $0",
				"Return ()",
				"// FIM do método ${2}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "Método ADVPL Simples"
		},
		"Tc_Query_Simples": {
			"prefix": "TcQuery",
			"body": [
				"Local ${1:cQuery} := ''",
				"Local ${2:cAlias} := ${3:GetNextAlias()}",
				"",
				"$1+= \" SELECT ${4:Campos}\"",
				"$1+= \" FROM \" + RetSqlTab('${5:Tabelas}')",
				"$1+= \" WHERE \" + RetSqlCond('$5')",
				"",
				"$1:= ChangeQuery($1)",
				"",
				"If Select($2) <> 0",
				"	\ ($2)->(DbCloseArea())",
				"EndIf",
				"",
				"dbUseArea(.T.,'TOPCONN', TCGenQry(,,$1),$2, .F., .T.)",
				"",
				"While ($2)->(!Eof())",
				"",
				"	\ $0",
				"",
				"	\ ($2)->(DbSkip())",
				"EndDo",
				"",
				"If Select($2) <> 0",
				"	\ ($2)->(DbCloseArea())",
				"EndIf",
				""
			],
			"description": "Monta uma Query para buscar dados de uma tabela TOP Connect"
		},

		"Begin_Sequence": {
			"prefix": "Begin Sequence",
			"description": "Tratamento de erros com Begin Sequence e ErrorBlock",
			"body": [
				"Local oError",
				"Local bError:= { |e| oError := e , Break(e) }",
				"Local bErrorBlock:= ErrorBlock( bError )",
				"",
				"Begin Sequence",
				"	\ $0",
				"Recover",
				"	\ ${1:cMensagemErro} := ProcName() + ' ' + Str(ProcLine()) + ' ' + oError:Description + CRLF + oError:ErrorStack",
				"End Sequence",
				"ErrorBlock( bErrorBlock ) // Restaura tratamento padrão de erros"
			]

		},

		"MsAguarde": {
			"prefix": "MsAguarde",
			"description": "Monta tela de processamento para múltiplas mensagens",
			"body": [
				"MSAguarde( ${1:bAction}, ${2:cTitle} ,${3:cMsg},${4:lAbort})"
			]

		},

		"FWMsgRun": {
			"prefix": "FWMsgRun",
			"description": "Exibe um painel com animação e texto durante o processamento de um bloco de código permite atualizar o texto em tempo de execução",
					//"oComponent - Object - Componente que será sobreposto com o painel \n" +
					//"bAction - Code-block - Bloco de código a ser executado (o Bloco de código recebera o objeto TSay para atualizações) \n" +
					//"cHeader - String - Texto do Header \n" +
					//"cText - String - Texto do Corpo \n" +
					//"Exemplo: FWMsgRun(, {|oSay| ExecTest(oSay) }, 'Processando', 'Processando a rotina...') \n" +
			"body": "FWMsgRun( ${1:oComponent} , ${2:bAction}, ${3:cHeader}, ${4:cText} )"

		},

		"MsgRun": {
			"prefix": "MsgRun",
			"description": "Apresenta uma janela com uma mensagem durante o processamento.",
			"body": [
				"MsgRun ( ${1:cText}, ${2:cHeader}, ${3:bBlock} )"
			]

		},

		"GDFieldPut": {
			"prefix": "GDFieldPut",
			"description": "Altera o conteúdo de uma posição da GetDados ou MsNewGetdados.",
			"body": "GDFieldPut( ${1:cCampo}, ${2:xConteúdo}, ${3:nLine}, ${4:aHeaderPastPar}, ${5:aColsPastPar}, ${6:lReadVar} ) "
		},

		"GDFieldGet": {
			"prefix": "GDFieldGet",
			"description": "Devolve o conteúdo de um campo da GetDados ou da MsNewGetdados.",
			"body": "GDFieldGet( ${1:cCampo}, ${2:nLine}, ${3:aHeaderPastPar}, ${4:aColsPastPar}, ${5:lReadVar} ) "
		},

		"GDDeleted": {
			"prefix": "GDDeleted",
			"description": "Identifica se uma linha está deletada na GetDados ou MsNewGetDados.",
			"body": "GDDeleted( ${1:nLine}, ${2:aHeaderPastPar}, ${4:aColsPastPar} ) "
		},

		"GDFieldPos": {
			"prefix": "GDFieldPos",
			"description": "Devolve a posição de um campo da GetDados ou MsNewGetdados.",
			"body": "GDFieldPos( ${1:cCampo}, ${2:aHeadOpc} ) "
		},

		"Test_Snip": {
			"prefix": "Test_Snip",
			"description": "TEste de Snippets",
			"body": [
				"Function() {",
				"Linha de teste com Clipboard: $CLIPBOARD",
				"Linha de teste 2",
				"Return x }"
			]

		},

		"TesteSuite":{
			"prefix": "TestSuite TGM",
			"body": [
		   "#Include 'PROTHEUS.CH'  ",
		   "",
		   "",
		   "//============================================================================\\",
		   "/*/{Protheus.doc}${1:NomeClasse}TestSuite",
		   "  ==============================================================================",
		   "	\ @description",
		   "	\ Suite de Testes ${2:Descricao da Suite}",
		   "",
		   "	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
		   "	\ @version 1.0",
		   "	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
		   "",
		   "/*/",
		   "//============================================================================\\",
		   "CLASS ${1}TestSuite FROM FWDefaultTestSuite",
		   "",
		   "	\ DATA oHelper   ",
		   "	\ DATA aParam   ",
		   "",
		   "	\ //--------------------------------",
		   "	\ // Criação dos métodos na classe  ",
		   "	\ //--------------------------------",
		   "	\ METHOD ${1}TestSuite() CONSTRUCTOR  ",
		   "	\ METHOD SetUpSuite()",
		   "	\ METHOD TearDownSuite()  ",
		   "",
		   "ENDCLASS ",
		   "// FIM da definição da classe ${1}TestSuite",
		   "//==============================================================================",
		   "",
		   "",
		   "",
		   "//============================================================================\\",
		   "/*/{Protheus.doc}${1}TestSuite",
		   "  ==============================================================================",
		   "	\ @description",
		   "	\ Criação do método construtor e instancia os casos de teste da rotina",
		   "",
		   "	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
		   "	\ @version 1.0",
		   "	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
		   "",
		   "/*/",
		   "//============================================================================\\",
		   "METHOD ${1}TestSuite() CLASS ${1}TestSuite ",
		   "	\ //---------------------------------------------------------",
		   "	\ // Herda as características do objeto FWDefaultTestSuite() ",
		   "	\ //---------------------------------------------------------",
		   "	\ _Super:FWDefaultTestSuite()  ",
		   "",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ // Adicionar os TestGroup referentes a rotina que está sendo automatizada",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ Self:AddTestSuite(${1}${3}TestGroup():${1}${3}TestGroup() )  ",
		   "",
		   "",
		   "Return ( Self )  ",
		   "// FIM do método ${1}TestSuite",
		   "//==============================================================================",
		   "",
		   "",
		   "",
		   "//============================================================================\\",
		   "/*/{Protheus.doc}SetUpSuite",
		   "  ==============================================================================",
		   "	\ @description",
		   "	\ Criação do método principal: SetUpSuite",
		   "	\ Prepara o ambiente para execução dos casos de teste   ",
		   "",
		   "	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
		   "	\ @version 1.0",
		   "	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
		   "",
		   "/*/",
		   "//============================================================================\\",
		   "METHOD SetUpSuite() CLASS ${1}TestSuite  ",
		   "",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ // Configura os parâmetros que serão modificados neste TestSuite",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ ::aParam:= {}",
		   "	\ //aAdd(::aParam, { 'MV_MEUPARAMETRO', NOVO_VALOR, Nil })",
		   "$0",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ // Instancia a classe helper para os testes",
		   "	\ //----------------------------------------------------------------------- ",
		   "	\ ::oHelper := FWTestHelper():New()  ",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Realiza a abertura do ambiente ",
		   "	\ //-------------------------------------",
		   "	\ ::oHelper:UTOpenFilial('01','03TEL01','ESP')",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Backup dos parâmetros",
		   "	\ //-------------------------------------",
		   "	\ aEval(::aParam, {|x,y| ::aParam[y,3]:= GetMv(x[1]) })",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Configuração dos parâmetros",
		   "	\ //-------------------------------------",
		   "	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[2] ) })",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Ativa Classe Auxiliar",
		   "	\ //-------------------------------------",
		   "	\ ::oHelper:Activate() ",
		   "",
		   "",
		   "Return ( ::oHelper )",
		   "// FIM do método SetUpSuite",
		   "//==============================================================================",
		   "",
		   "",
		   "",
		   "//============================================================================\\",
		   "/*/{Protheus.doc}TearDownSuite",
		   "  ==============================================================================",
		   "	\ @description",
		   "	\ Criação do método finalizador:",
		   "	\ Este método é responsável por restaurar os valores dos parâmetros",
		   "	\ e fechar a filial. ",
		   "",
		   "	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
		   "	\ @version 1.0",
		   "	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
		   "",
		   "/*/",
		   "//============================================================================\\",
		   "METHOD TearDownSuite() CLASS ${1}TestSuite    ",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Restauração dos parâmetros",
		   "	\ //-------------------------------------",
		   "	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[3] ) })",
		   "",
		   "	\ //-------------------------------------",
		   "	\ // Realiza o fechamento do ambiente",
		   "	\ //-------------------------------------",
		   "	\ ::oHelper:UTCloseFilial()",
		   "",
		   "",
		   "Return ( ::oHelper )",
		   "// FIM do método TearDownSuite",
		   "//=============================================================================="
			],
			"description": "Estrutura básica de TestSuite com alteração de parâmetro."
		 },
		 "TestGroup":{
			"prefix": "TestGroup TGM",
			"body": [
				"#Include 'PROTHEUS.CH'  ",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:NomeClasse}TestGroup",
				"  ==============================================================================",
				"	\ @description",
				"	\ Grupo de casos de testes ${2:Descricao do Grupo}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"CLASS ${1}TestGroup FROM FWDefaultTestSuite",
				"",
				"	\ DATA oHelper   ",
				"	\ DATA aParam   ",
				"",
				"	\ //--------------------------------",
				"	\ // Criação dos métodos na classe  ",
				"	\ //--------------------------------",
				"	\ METHOD ${1}TestGroup() CONSTRUCTOR  ",
				"	\ METHOD SetUpSuite()",
				"	\ METHOD TearDownSuite()  ",
				"",
				"ENDCLASS ",
				"// FIM da definição da classe ${1}TestGroup",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}TestGroup",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método construtor e instancia os casos de teste da rotina",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD ${1}TestGroup() CLASS ${1}TestGroup ",
				"	\ //---------------------------------------------------------",
				"	\ // Herda as características do objeto FWDefaultTestSuite() ",
				"	\ //---------------------------------------------------------",
				"	\ _Super:FWDefaultTestSuite()  ",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Adicionar os TestCase referentes a rotina que está sendo automatizada",
				"	\ //----------------------------------------------------------------------- ",
				"	\ Self:AddTestCase(${3:TestCase}():${3:TestCase}() )  ",
				"",
				"",
				"Return ( Self )  ",
				"// FIM do método ${1}TestGroup",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}SetUpSuite",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método principal: SetUpSuite",
				"	\ Prepara o ambiente para execução dos casos de teste   ",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD SetUpSuite() CLASS ${1}TestGroup  ",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Configura os parâmetros que serão modificados neste TestGroup",
				"	\ //----------------------------------------------------------------------- ",
				"	\ ::aParam:= {}",
				"	\ //aAdd(::aParam, { 'MV_MEUPARAMETRO', NOVO_VALOR, Nil })",
				"$0",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Instancia a classe helper para os testes",
				"	\ //----------------------------------------------------------------------- ",
				"	\ ::oHelper := FWTestHelper():New()  ",
				"",
				"	\ //-------------------------------------",
				"	\ // Backup dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x,y| ::aParam[y,3]:= GetMv(x[1]) })",
				"",
				"	\ //-------------------------------------",
				"	\ // Configuração dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[2] ) })",
				"",
				"	\ //-------------------------------------",
				"	\ // Ativa Classe Auxiliar",
				"	\ //-------------------------------------",
				"	\ ::oHelper:Activate() ",
				"",
				"",
				"Return ( ::oHelper )",
				"// FIM do método SetUpSuite",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}TearDownSuite",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método finalizador:",
				"	\ Este método é responsável por restaurar os valores dos parâmetros",
				"	\ e fechar a filial. ",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD TearDownSuite() CLASS ${1}TestGroup    ",
				"",
				"	\ //-------------------------------------",
				"	\ // Restauração dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[3] ) })",
				"",
				"",
				"Return ( ::oHelper )",
				"// FIM do método TearDownSuite",
				"//=============================================================================="
			],
			"description": "Estrutura básica de TestGroup."
		 },
		 "TestCase":{
			"prefix": "TestCase TGM",
			"body": [
				"#Include 'PROTHEUS.CH'  ",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1:NomeClasse}TestCase",
				"  ==============================================================================",
				"	\ @description",
				"	\ Casos de teste ${2:Descricao do Grupo}",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"CLASS ${1}TestCase FROM FWDefaultTestCase",
				"",
				"	\ DATA cProgram",
				"	\ DATA oHelper",
				"	\ DATA aParam",
				"",
				"	\ //--------------------------------",
				"	\ // Criação dos métodos na classe  ",
				"	\ //--------------------------------",
				"	\ METHOD ${1}TestCase() CONSTRUCTOR  ",
				"	\ METHOD SetUpClass()",
				"	\ METHOD TearDownClass()  ",
				"",
				"	\ METHOD ${3:Metodo}()",
				"",
				"",
				"ENDCLASS ",
				"// FIM da definição da classe ${1}TestCase",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}TestCase:${1}TestCase",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método construtor e instancia os casos de teste da rotina",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD ${1}TestCase() CLASS ${1}TestCase ",
				"",
				"	\ //---------------------------------------------------------",
				"	\ // Herda as características do objeto FWDefaultTestCase() ",
				"	\ //---------------------------------------------------------",
				"	\ _Super:FWDefaultTestCase()  ",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Adicionar os Métodos de teste referentes a rotina que está sendo automatizada",
				"	\ //----------------------------------------------------------------------- ",
				"	\ Self:AddTestMethod('${3}',,'${4:Descricao do método}')  ",
				"",
				"",
				"Return ( Self )  ",
				"// FIM do método ${1}TestCase",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}TestCase:SetUpClass",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método principal: SetUpClass",
				"	\ Prepara o ambiente para execução dos casos de teste   ",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD SetUpClass() CLASS ${1}TestCase  ",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Programa e outras variáveis utilizadas na rotina",
				"	\ //----------------------------------------------------------------------- ",
				"	\ ::cProgram:= '${5:Model ou programa}'",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Configura os parâmetros que serão modificados neste TestCase",
				"	\ //----------------------------------------------------------------------- ",
				"	\ ::aParam:= {}",
				"	\ //aAdd(::aParam, { 'MV_MEUPARAMETRO', NOVO_VALOR, Nil })",
				"",
				"	\ //----------------------------------------------------------------------- ",
				"	\ // Instancia a classe helper para os testes",
				"	\ //----------------------------------------------------------------------- ",
				"	\ ::oHelper := FWTestHelper():New()  ",
				"",
				"	\ //-------------------------------------",
				"	\ // Backup dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x,y| ::aParam[y,3]:= GetMv(x[1]) })",
				"",
				"	\ //-------------------------------------",
				"	\ // Configuração dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[2] ) })",
				"",
				"	\ //-------------------------------------",
				"	\ // Ativa Classe Auxiliar",
				"	\ //-------------------------------------",
				"	\ ::oHelper:Activate() ",
				"",
				"",
				"Return ( ::oHelper )",
				"// FIM do método SetUpClass",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}TestCase:TearDownClass",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método finalizador:",
				"	\ Este método é responsável por restaurar os valores dos parâmetros",
				"	\ e fechar a filial. ",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD TearDownClass() CLASS ${1}TestCase    ",
				"",
				"	\ //-------------------------------------",
				"	\ // Restauração dos parâmetros",
				"	\ //-------------------------------------",
				"	\ aEval(::aParam, {|x| ::oHelper:UTSetParam( x[1], x[3] ) })",
				"",
				"",
				"Return ( ::oHelper )",
				"// FIM do método TearDownClass",
				"//==============================================================================",
				"",
				"",
				"",
				"//============================================================================\\",
				"/*/{Protheus.doc}${1}TestCase:${3}",
				"  ==============================================================================",
				"	\ @description",
				"	\ Criação do método finalizador:",
				"	\ Este método é responsável por restaurar os valores dos parâmetros",
				"	\ e fechar a filial. ",
				"",
				"	\ @author Thiago Mota <mota.thiago@totvs.com.br>",
				"	\ @version 1.0",
				"	\ @since $CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR",
				"",
				"/*/",
				"//============================================================================\\",
				"METHOD ${3}() CLASS ${1}TestCase    ",
				"",
				"	\ //-------------------------------------",
				"	\ // Restauração dos parâmetros",
				"	\ //-------------------------------------",
				"	\ Local oModel	:= FwloadModel(::cProgram)",
				"",
				"	\ oModel:SetOperation(3)",
				"	\ oModel:Activate()",
				"",
				"	\ ::oHelper:SetModel(oModel)",
				"	\ ::oHelper:Activate()",
				"$0",
				"	\ // ::oHelper:UTSetValue( 'Model', 'Campo' , Valor )",
				"",
				"	\ // Dispara o commit da rotina MVC",
				"	\ // ::oHelper:UTCommitData()",
				"",
				"	\ // Verificação dos dados gravados",
				"	\ // ::oHelper:UTQueryDB( 'Tabela', 'Campo' , cFiltro, Valor )",
				"",
				"	\ // Define o retorno do método",
				"	\ //::oHelper:AssertTrue(::oHelper:lOk,'')",
				"",
				"",
				"Return ( ::oHelper )",
				"// FIM do método ${3}",
				"//==============================================================================",
				"",
				"",
				"",
				""
			],
			"description": "Estrutura básica de TestCase."
		 }


	}